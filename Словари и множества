#include <iostream>
#include <set>

using namespace std;

set<int>& fill_set(set<int>& s, int n) {
    int num;
    for (; n > 0; --n) {
        cin >> num;
        s.insert(num);
    }

    return s;
}

set<int> intersection(const set<int>& s1, const set<int>& s2) {
    set<int> new_s;
    set<int>::const_iterator it1 = s1.begin();
    set<int>::const_iterator it2 = s2.begin();

    while (it1 != s1.end() && it2 != s2.end()) {
        if (*it1 < *it2) {
            ++it1;
        }
        else if (*it1 > *it2) {
            ++it2;
        }
        else {
            new_s.insert(*it1);
            ++it1;
            ++it2;
        }
    }

    return new_s;
}

int main() {
    set<int> s1, s2;
    int n;

    cin >> n;
    s1 = fill_set(s1, n);
    cin >> n;
    s2 = fill_set(s2, n);

    set<int> s = intersection(s1, s2);

    for (set<int>::const_iterator it = s.begin(); it != s.end(); ++it) {
        cout << *it << ' ';
    }

    return 0;
}
